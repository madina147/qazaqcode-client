import { useEffect, useRef, useState } from 'react';
import ChatMessage from '../components/messages/ChatMessage';
import ChatInput from '../components/messages/ChatInput';
import { useChat } from '../context/ChatContext';
import '../styles/ChatPage.scss';
import '../styles/EnhancedChat.scss';

const ChatPage = () => {
  const { 
    messages, 
    loading, 
    error, 
    sendMessage, 
    sendFile,
    refreshMessages 
  } = useChat();
  const messagesEndRef = useRef(null);
  const [showTips, setShowTips] = useState(false);

  // Fetch messages on component mount
  useEffect(() => {
    refreshMessages();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  // Scroll to bottom whenever messages change
  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  const toggleTips = () => {
    setShowTips(!showTips);
  };

  return (
    <div className="chat-container">
      <div className="chat-header">
        <h1>–ß–∞—Ç</h1>
        <div className="chat-subtitle">Python “Ø–π—Ä–µ–Ω—É –æ—Ä—Ç–∞“õ —á–∞—Ç—ã</div>
        <button 
          className="tips-toggle-button" 
          onClick={toggleTips}
          aria-expanded={showTips}
        >
          {showTips ? "–ö–µ“£–µ—Å—Ç–µ—Ä–¥—ñ –∂–∞—Å—ã—Ä—É" : "–ö–µ“£–µ—Å—Ç–µ—Ä–¥—ñ –∫”©—Ä—Å–µ—Ç—É"}
        </button>
      </div>
      
      {error && <div className="chat-error">{error}</div>}
      
      <div className="chat-messages-container">
        {showTips && (
          <div className="python-learning-tips collapsed">
            <h2>–ñ—ã–ª–¥–∞–º –∫–µ“£–µ—Å—Ç–µ—Ä</h2>
            <div className="tip-grid">
              <div className="tip">
                <h3>–ö–æ–¥ —Ñ–æ—Ä–º–∞—Ç—Ç–∞—É</h3>
                <p>```python</p>
              </div>
              <div className="tip">
                <h3>–°“±—Ä–∞“õ—Ç–∞—Ä “õ–æ—é</h3>
                <p>‚ùì –°—ñ–∑–¥—ñ“£ —Å“±—Ä–∞“ì—ã“£—ã–∑</p>
              </div>
              <div className="tip">
                <h3>–§–∞–π–ª–¥–∞—Ä–º–µ–Ω –±”©–ª—ñ—Å—É</h3>
                <p>üìÑ .py</p>
              </div>
            </div>
          </div>
        )}
        
        <div className={`chat-messages ${!showTips ? 'expanded' : ''}`}>
          {loading && messages.length === 0 ? (
            <div className="chat-loading">–ñ“Ø–∫—Ç–µ–ª—É–¥–µ...</div>
          ) : messages.length === 0 ? (
            <div className="no-messages">–•–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä –∂–æ“õ</div>
          ) : (
            messages.map((message) => (
              <ChatMessage key={message._id} message={message} />
            ))
          )}
          <div ref={messagesEndRef} />
        </div>
      </div>
      
      <ChatInput onSendMessage={sendMessage} onSendFile={sendFile}/>
    </div>
  );
};

export default ChatPage; 